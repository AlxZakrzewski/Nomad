- name: Create Nomad directories structure
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
  loop:
    - "{{ nomad_binary_linpath }}"
    - "{{ nomad_config_linpath }}"
    - "{{ nomad_log_linpath }}"

- name: Create Nomad data directory
  become: yes
  file:
    path: "{{ nomad_data_linpath }}"
    state: directory
    recurse: yes
    owner: "{{ nomad_user }}"
    group: "{{ nomad_user }}"
    mode: 0775

- name: Register $PATH as var
  shell: echo $PATH
  register: path

- set_fact:
    path_list: "{{ path.stdout.split(':') }}"

- name: Add {{ nomad_binary_linpath }} to .bashrc
  lineinfile:
    dest: "{{ shell_files.bashrc.linpath }}"
    line: 'export PATH={{ nomad_binary_linpath }}:$PATH'
    insertafter: EOF
  when: nomad_binary_linpath not in path_list

- name: Download Nomad zip file
  get_url:
    url: "{{ nomad_url }}"
    dest: "{{ nomad_binary_linpath }}"
    mode: 0750

- name: Uncompress source compressed file
  unarchive:
    src: "{{ nomad_zip_linpath }}"
    dest: "{{ nomad_binary_linpath }}"
    remote_src: yes

- name: Remove compressed file
  file:
    path: "{{ nomad_zip_linpath }}"
    state: absent

- name: Check Nomad executable is present
  shell: "nomad --version"
  register: result
  ignore_errors: true

- fail:
    msg: "Nomad is not found!"
  when: result.rc != 0

- name: Copy base.hcl
  template:
    src: base.hcl
    dest: "{{ nomad_config_linpath }}/base.hcl"
    mode: 0755

- name: Copy client.hcl into Nomad Client
  template:
    src: client.hcl
    dest: "{{ nomad_config_linpath }}/client.hcl"
    mode: 0755
  when: nomad_client

- name: Copy server.hcl into Nomad Client
  template:
    src: server.hcl
    dest: "{{ nomad_config_linpath }}/server.hcl"
    mode: 0755
  when: nomad_server

- name: Copy nomad.service
  become: yes
  template:
    src: nomad.service
    dest: "/etc/systemd/system/nomad.service"
    mode: 0755

- name: Restart service nomad
  become: yes
  systemd:
    enabled: yes
    state: restarted
    daemon_reload: yes
    name: nomad